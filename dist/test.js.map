{"version":3,"sources":["test.js"],"names":["a","pro","Proxy","revocable","get","target","key","context","console","log"],"mappings":"AAyIA,YA4BA,IAAIA,IACHA,EAAG,GAEAC,IAAMC,MAAMC,UAAUH,GACzBI,IAAK,SAAaC,EAAQC,EAAKC,GAC9BC,QAAQC,IAAIH,KAGdN,GAAEA","file":"test.js","sourcesContent":["// function foo(x,y,z){\n// \tconsole.log(x,y,z);\n// }\n// foo(...[1,2,3]);\n// function foo(x,y,...z){\n// \tconsole.log(z);\n// }\n// foo(1,2,3,4,5);\n// var a=[2,3,4];\n// console.log([...a])\n// var {a:x,b:y,c:z}={x:1,y:2,z:3};\n// var {x,y,z}={x:1,y:2,z:3};\n// var ({x:bam,y:baz,z:bap}={x:1,y:2,z:3});\n// console.log(bam,baz,bap);\n// var x=1,y=3;\n// [x,y]=[y,x];\n// function foo(strings,...values){\n// \tconsole.log(strings,values);\n// }\n// var desc=\"awesome\";\n// console.log(`Everything is ${desc}!`);\n\n// var n1=0o52;\n// var n2=42;\n// var n3=0x2a;\n// var n4=0b101010;\n// console.log(n1,n2,n3,n4);\n\n// var m=new Map();\n// m.set(\"foo\",42);\n// m.set({cool:true},\"hello world\");\n// var it1=m.entries();\n// console.log(it1.next());\n// console.log(it1.next());\n// console.log(it1.next());\n\n// var Fib={\n// \t[Symbol.iterator](){\n// \t\tvar n1=1,n2=1;\n// \t\treturn {\n// \t\t\tnext() {\n// \t\t\t\tvar current=n1;\n// \t\t\t\tn2=n1;\n// \t\t\t\tn1=n1+n2;\n// \t\t\t\treturn {value:current,done:false};\n// \t\t\t},\n// \t\t\treturn(v) {\n// \t\t\t\tconsole.log(\"Fibonacci sequence abandoned\");\n// \t\t\t\treturn {value:v,done:true};\n// \t\t\t}\n// \t\t};\n// \t}\n// };\n// for(var v of Fib){\n// \tconsole.log(v);\n// \tif(v>50) break;\n// }\n// var tasks={\n// \t[Symbol.iterator](){\n// \t\tvar steps=this.actions.slice();\n// \t\treturn {\n// \t\t\tnext(...args){\n// \t\t\t\tif(steps.length>0){\n// \t\t\t\t\tlet res=steps.shift()(...args);\n// \t\t\t\t\treturn {value:res,done:false}\n// \t\t\t\t}else{\n// \t\t\t\t\treturn {value:res,done:false};\n// \t\t\t\t}\n// \t\t\t},\n// \t\t\treturn(v){\n// \t\t\t\tsteps.length=0;\n// \t\t\t\treturn {value:v,done:true};\n// \t\t\t}\n// \t\t}\n// \t},\n// \tactions:[]\n// };\n// tasks.actions.push(\n// \tfunction step1(x){\n// \t\tconsole.log(\"step 1:x\",x);\n// \t\treturn x*2;\n// \t},\n// \tfunction step2(x,y){\n// \t\tconsole.log(\"step2\",x,y);\n// \t\treturn x+(y*2);\n// \t},\n// \tfunction(x,y,z){\n// \t\tconsole.log(\"step 3:\",x,y,z);\n// \t\treturn (x*y)+z;\n// \t}\n// );\n// var it=tasks[Symbol.iterator]();\n// it.next(10);\n// it.next(20,50);\n// it.next(20,50,120);\n// it.next();\n\n// if(!Number.prototype[Symbol.iterator]){\n// \tObject.defineProperty(\n// \t\tNumber.prototype,\n// \t\tSymbol.iterator,\n// \t\t{\n// \t\t\twritable:true,\n// \t\t\tconfigurable:true,\n// \t\t\tenumerable:false,\n// \t\t\tvalue:function(){\n// \t\t\t\tvar i,inc,done=false,top=+this;\n// \t\t\t\tinc=1*(top<0?-1:1);\n// \t\t\t\treturn {\n// \t\t\t\t\tnext(){\n// \t\t\t\t\t\tif(!done){\n// \t\t\t\t\t\t\tif(i==null){\n// \t\t\t\t\t\t\t\ti=0;\n// \t\t\t\t\t\t\t}else if(top>=0){\n// \t\t\t\t\t\t\t\ti=Math.min(top,i+inc);\n// \t\t\t\t\t\t\t}else{\n// \t\t\t\t\t\t\t\ti=Math.max(top,i+inc)\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\tif(i==top) done=true;\n// \t\t\t\t\t\t\treturn {value:i,done:false};\n// \t\t\t\t\t\t}else{\n// \t\t\t\t\t\t\treturn {done:true};\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t};\n// \t\t\t}\n// \t\t}\n// \t);\n// }\n// var c=0;\n// for(var i of 3){\n// \tif(c++>5) break;\n// \tconsole.log(i);\n// }\n\n// var [a,b,c,d,e]=[...3];\n// console.log([...3])\n'use strict';\n// class A{\n// \tconstructor(a,b){\n// \t\tthis.a=a;\n// \t\tthis.b=b;\n// \t}\n// \tprintab(){\n// \t\tconsole.log(this.a,this.b)\n// \t}\n// }\n// class B extends A{\n// \tconstructor(a,b,c){\n// \t\tsuper(a,b);\n// \t\tthis.c=c;\n// \t}\n// \tprintabc(){\n// \t\tsuper.printab();\n// \t\tconsole.log(this.c);\n// \t}\n// }\n// var a=new B(1,2,3);\n// a.printabc()\n// class A extends Array{\n// \tstatic get [Symbol.species](){console.log(this);return Array;};\n// }\n// var b=new A();\n// console.log(b,b instanceof A);\n\nvar a = {\n\ta: 1\n};\nvar pro = Proxy.revocable(a, {\n\tget: function get(target, key, context) {\n\t\tconsole.log(key);\n\t}\n});\na.a;"],"sourceRoot":"/source/"}